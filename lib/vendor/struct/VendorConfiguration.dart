import 'package:flutter/material.dart';
import 'package:meta/meta.dart';
import 'package:w_transport/w_transport.dart' as transport;

abstract class VendorConfiguration {

  String tmdbKey;
  TraktCredentials traktCredentials;

  final String name;

  ///
  /// A VendorConfiguration should be used to change the default settings in the
  /// ApolloTV app. Simply create your own class and extend [VendorConfiguration].
  ///
  /// [name] - The name of the vendor. If you are developing this independently,
  ///           use your GitHub name.
  ///
  VendorConfiguration({
    @required this.name,

    this.tmdbKey,
    this.traktCredentials
  });

  ///
  /// Returns the name of the Vendor, as provided when the configuration object
  /// was initialized.
  ///
  String getName(){
    return name;
  }

  ///
  /// This method will be called in order to authenticate with the vendor API.
  /// All keys generated by this method should be stored internally.
  /// However, they will not be used until this has completed.
  ///
  /// This method returns a [bool] to determine whether authentication was
  /// successful.
  ///
  Future<bool> authenticate(BuildContext context, {bool force = false});

  Future<void> playMovie(String title, String releaseDate, BuildContext context);
  Future<void> playTVShow(
      String title,
      String releaseDate,
      int seasonNumber,
      int episodeNumber,
      BuildContext context
    );

  Future<void> cancel();

  String getTMDBKey(){
    if(tmdbKey != null){
      return tmdbKey;
    }else{
      throw new Exception("Invalid TMDB API key for provider ${getName()}.");
    }
  }

  TraktCredentials getTraktCredentials(){
    if(traktCredentials != null){
      return traktCredentials;
    }else{
      throw new Exception("Invalid TMDB API key for provider ${getName()}.");
    }
  }

}

class TraktCredentials {

  String id;
  String secret;

  TraktCredentials({
    @required this.id,
    @required this.secret
  });

}
